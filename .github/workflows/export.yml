name: "Export Windows and Linux"

on:
  workflow_call:
    inputs:
      export_name:
        required: true
        type: string
      godot_version:
        required: false
        type: string
        default: 4.2.2

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:mono-4.2.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: .NET installation
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"
    
      - name: Authorize GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
    
      # Step to Authenticate with GCP
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${{ inputs.godot_version }}.stable.mono ~/.local/share/godot/export_templates/${{ inputs.godot_version }}.stable.mono
          echo "VERSION=$(grep -o 'config/version="[^"]*"' project.godot | tr -d "config/version=\"")" >> $GITHUB_ENV
          echo "RELEASE_TYPE="$(echo ${{ github.head_ref }} | cut -c 15-) >> $GITHUB_ENV

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless --verbose --export-release "Windows Desktop" ./build/windows/${{ inputs.export_name }}.exe

      - name: Upload to GCS
        run: |
          (cd build/windows; zip -r ../../${{ inputs.export_name }}-${{ env.VERSION }}.zip ./)
          gsutil cp ./${{ inputs.export_name }}-${{ env.VERSION }}.zip gs://${{ secrets.GCP_BITBUSTER_RELEASE_BUCKET }}/${{ env.RELEASE_TYPE }}/windows 

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:mono-4.2.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: .NET installation
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Authorize GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
  
      # Step to Authenticate with GCP
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${{ inputs.godot_version }}.stable.mono ~/.local/share/godot/export_templates/${{ inputs.godot_version }}.stable.mono
          echo "VERSION=$(grep -o 'config/version="[^"]*"' project.godot | tr -d "config/version=\"")" >> $GITHUB_ENV
          echo "RELEASE_TYPE="$(echo ${{ github.head_ref }} | cut -c 15-) >> $GITHUB_ENV

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless --verbose --export-release "Linux/X11" ./build/linux/${{ inputs.export_name }}.x86_64

      - name: Upload to GCS
        run: |
          (cd build/linux; zip -r ../../${{ inputs.export_name }}-${{ env.VERSION }}.zip ./)
          gsutil cp ./${{ inputs.export_name }}-${{ env.VERSION }}.zip gs://${{ secrets.GCP_BITBUSTER_RELEASE_BUCKET }}/${{ env.RELEASE_TYPE }}/linux # it yields `release alpha`